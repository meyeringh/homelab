nextcloud:
  service:
    main:
      ports:
        http:
          port: 80
          protocol: HTTP
  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      external-dns.alpha.kubernetes.io/target: "homelab-tunnel.meyeringh.org"
      external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
      nginx.ingress.kubernetes.io/affinity: cookie
      nginx.ingress.kubernetes.io/configuration-snippet: |-
        more_set_headers "Strict-Transport-Security: max-age=15552000; includeSubDomains";
      nginx.ingress.kubernetes.io/server-snippet: |-
        server_tokens off;
        proxy_hide_header X-Powered-By;
        rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
        rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
        rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
        rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
        location = /.well-known/carddav {
          return 301 $scheme://$host/remote.php/dav;
        }
        location = /.well-known/caldav {
          return 301 $scheme://$host/remote.php/dav;
        }
        location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
        }
        location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
          deny all;
        }
        location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
          deny all;
        }
    hosts:
      - host: &frontend_host cloud.meyeringh.org
        paths:
          - path: /
            pathType: Prefix
            service:
              name: main
              port: http
    tls:
      - secretName: nextcloud-tls-certificate
        hosts:
          - *frontend_host
  nextcloud:
    host: cloud.meyeringh.org
    trustedDomains:
      - 'cloud.meyeringh.org'
    defaultConfigs:
      imaginary.config.php: true
    existingSecret:
      enabled: true
      secretName: nextcloud
      usernameKey: nextcloud-username
      passwordKey: nextcloud-password
    mail:
      enabled: false # We need to use env vars here, because otherwise we cant set secrets and its either all or nothing
    configs:
      security.config.php: |-
        <?php
        $CONFIG = array (
          'maintenance_window_start' => 1,
          'trusted_proxies' => [
            '10.0.0.0/8',
            '172.16.0.0/12', 
            '192.168.0.0/16'
          ],
          'forwarded_for_headers' => ['HTTP_X_FORWARDED_FOR', 'HTTP_FORWARDED'],
          'overwriteprotocol' => 'https',
          'overwrite.cli.url' => 'https://cloud.meyeringh.org',
        );
      custom.config.php: |-
        <?php
        $CONFIG = array (
          'default_phone_region' => 'DE'
        );
      sso.config.php: |-
        <?php
        $CONFIG = array (
          'allow_user_to_change_display_name' => false,
          'lost_password_link' => 'disabled',
          'oidc_login_provider_url' => 'https://dex.meyeringh.org',
          'oidc_login_client_id' => 'nextcloud',
          'oidc_login_client_secret' => getenv('OIDC_LOGIN_CLIENT_SECRET'),
          'oidc_login_button_text' => 'Log in with Dex',
          'oidc_login_auto_redirect' => false,
          'oidc_login_hide_password_form' => false,
          'oidc_login_password_authentication' => false,
          'oidc_login_end_session_redirect' => false,
          'oidc_login_use_id_token' => false,
          'oidc_login_attributes' => array(
            'id'     => 'preferred_username',
            'name'   => 'name',
            'mail'   => 'email',
            'groups' => 'groups',
          ),
          'oidc_login_scope' => 'openid profile email groups',
          'oidc_login_disable_registration' => false,
          'oidc_login_default_group' => 'user',
          'oidc_create_groups' => false,
          'oidc_login_tls_verify' => true,
          'oidc_login_webdav_enabled' => true,
          'oidc_login_public_key_caching_time' => 86400,
          'oidc_login_min_time_between_jwks_requests' => 10,
          'oidc_login_well_known_caching_time' => 86400,
          'oidc_login_update_avatar' => false,
          'oidc_login_code_challenge_method' => 'S256',
        );
    extraEnv:
      - name: OIDC_LOGIN_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: nextcloud-sso-secrets
            key: NEXTCLOUD_CLIENT_SECRET
      - name: MAIL_FROM_ADDRESS
        valueFrom:
          secretKeyRef:
            name: nextcloud-mail-secret
            key: sender
      - name: MAIL_DOMAIN
        valueFrom:
          secretKeyRef:
            name: nextcloud-mail-secret
            key: domain
      - name: SMTP_HOST
        value: mail.meyeringh.org
      - name: SMTP_SECURE
        value: tls
      - name: SMTP_PORT
        value: "587"
      - name: SMTP_AUTHTYPE
        value: LOGIN
      - name: SMTP_NAME
        valueFrom:
          secretKeyRef:
            name: nextcloud-mail-secret
            key: username
      - name: SMTP_PASSWORD
        valueFrom:
          secretKeyRef:
            name: nextcloud-mail-secret
            key: password
    podSecurityContext:
      fsGroupChangePolicy: "OnRootMismatch" # We do this because container startup takes ages otherwise
  cronjob:
    enabled: true
  persistence:
    enabled: true
    size: 7Ti
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30 # We need to set super high liveness probe, so we dont fail during upgrades
    periodSeconds: 15
    timeoutSeconds: 10
    failureThreshold: 30
    successThreshold: 1
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 15
    timeoutSeconds: 10
    failureThreshold: 8
    successThreshold: 1
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 15
    timeoutSeconds: 10
    failureThreshold: 30
    successThreshold: 1
  imaginary:
    enabled: true
  redis:
    enabled: true
    auth:
      enabled: true
      existingSecret: nextcloud-redis
      existingSecretPasswordKey: password
    replica:
      replicaCount: 0
  collabora:
    enabled: true
    collabora:
      server_name: collabora.meyeringh.org
      aliasgroups:
        - host: https://cloud.meyeringh.org
      extra_params: "--o:ssl.enable=false --o:ssl.termination=true --o:mount_namespaces=false" # We need to disable mounting of namespaces due to https://github.com/CollaboraOnline/online/issues/9534
      existingSecret:
        enabled: true
        secretName: nextcloud-collabora
        usernameKey: username
        passwordKey: password
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        external-dns.alpha.kubernetes.io/target: "homelab-tunnel.meyeringh.org"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
      hosts:
        - host: collabora.meyeringh.org
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: collabora-tls-certificate
          hosts:
            - collabora.meyeringh.org
  postgresql:
    enabled: true
    global:
      postgresql:
        auth:
          existingSecret: nextcloud-postgresql
          secretKeys:
            adminPasswordKey: postgres-password
            userPasswordKey: password
    primary:
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          memory: 256Mi
      persistence:
        enabled: true
        size: 50Gi
      persistentVolumeClaimRetentionPolicy:
        enabled: true
  internalDatabase:
    enabled: false
  externalDatabase:
    enabled: true
    type: postgresql
    existingSecret:
      enabled: true
      secretName: nextcloud-postgresql
      passwordKey: password