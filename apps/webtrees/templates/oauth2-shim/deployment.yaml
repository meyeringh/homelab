apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-shim
spec:
  replicas: 1
  selector:
    matchLabels: { app: oauth2-shim }
  template:
    metadata:
      labels: { app: oauth2-shim }
    spec:
      volumes:
        - name: oauth2-shim-source
          configMap:
            name: oauth2-shim-source
        - name: go-build-cache
          emptyDir: {}
      containers:
        - name: oauth2-shim
          image: golang:1.24-alpine
          env:
            - name: DEX_USERINFO_URL
              value: "https://dex.meyeringh.org/userinfo"
            - name: LISTEN_ADDR
              value: ":80"
            # avoid writing build cache to the image fs
            - name: GOCACHE
              value: /tmp/go-build
          workingDir: /go/src/oauth2-shim
          command: ["sh", "-c"]
          args: ["go run ."]
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - name: oauth2-shim-source
              mountPath: /go/src/oauth2-shim
              readOnly: true
            - name: go-build-cache
              mountPath: /tmp/go-build
          livenessProbe:
            httpGet: { path: /healthz, port: 80 }
            initialDelaySeconds: 2
            periodSeconds: 10
          readinessProbe:
            httpGet: { path: /healthz, port: 80 }
            initialDelaySeconds: 2
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-shim
  labels: { app: oauth2-shim }
spec:
  type: ClusterIP
  selector:
    app: oauth2-shim
  ports:
    - name: http
      port: 80
      targetPort: 80