app-template:
  controllers:
    minecraft:
      pod:
        securityContext:
          fsGroup: 1000
      initContainers:
        fix-permissions:
          image:
            repository: busybox
            tag: latest
          command:
            - sh
            - -c
            - |
              # Create directories if they don't exist
              mkdir -p /data/config-lgsm/mcserver
              mkdir -p /data/serverfiles
              # Copy config files with correct permissions
              cp /tmp/config/common.cfg /data/config-lgsm/mcserver/common.cfg
              cp /tmp/config/server.properties /data/serverfiles/server.properties
              # Set ownership to linuxgsm user (UID 1000)
              chown -R 1000:1000 /data/config-lgsm/mcserver/common.cfg /data/serverfiles/server.properties
              chmod 644 /data/config-lgsm/mcserver/common.cfg /data/serverfiles/server.properties
      containers:
        app:
          probes:
            liveness:
              enabled: false
            readiness:
              enabled: false
            startup:
              enabled: false
          image:
            repository: gameservermanagers/gameserver
            tag: mc
          resources:
            requests:
              cpu: 10m
              memory: 983Mi
            limits:
              memory: 983Mi
  configMaps:
    config:
      enabled: true
      data:
        common.cfg: |
          ##################################
          ######## Common Settings #########
          ##################################
          # PLACE GLOBAL SETTINGS HERE
          ## These settings will apply to all instances.

          #### Game Server Settings ####
          javaram="1024"
          mcversion="1.13.2"
          branch="release"
        server.properties: |
          # Minecraft Server Properties
          gamemode=survival
          motd=LinuxGSMtest
          white-list=true
          spawn-protection=0
          difficulty=2
  service:
    app:
      controller: minecraft
      ports:
        minecraft:
          port: 25565
          protocol: TCP
  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        external-dns.alpha.kubernetes.io/target: "homelab-tunnel.meyeringh.org"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          return 404 "This is a Minecraft server. Connect using minecraft.meyeringh.org:25565";
      hosts:
        - host: &host minecraft.meyeringh.org
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: app
                port: minecraft
      tls:
        - hosts:
            - *host
          secretName: minecraft-tls-certificate
  persistence:
    data:
      enabled: true
      accessMode: ReadWriteOnce
      size: 5Gi
      retain: true
      advancedMounts:
        minecraft:
          app:
            - path: /data
              subPath: data
          fix-permissions:
            - path: /data
              subPath: data
    config-temp:
      enabled: true
      type: configMap
      identifier: config
      advancedMounts:
        minecraft:
          fix-permissions:
            - path: /tmp/config
    drive:
      enabled: true
      existingClaim: my-files-pvc
      advancedMounts:
        minecraft:
          app:
            - path: /my-files
