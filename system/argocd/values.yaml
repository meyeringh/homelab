argo-cd:
  global:
    domain: argocd.meyeringh.org
  
  controller:
    metrics: &metrics
      enabled: true
      serviceMonitor:
        enabled: true

  server:
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 100Mi
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      tls: true
    metrics: *metrics

  repoServer:
    resources:
      requests:
        cpu: 17m
        memory: 781Mi
      limits:
        memory: 781Mi
    metrics: *metrics

  notifications:
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 100Mi

  redis:
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 100Mi
    metrics: *metrics

  configs:
    params:
      server.insecure: true
      controller.diff.server.side: true
    cm:
      resource.ignoreResourceUpdatesEnabled: true
      resource.customizations.ignoreResourceUpdates.all: |
        jsonPointers:
          - /status
      oidc.config: |
        name: Dex
        issuer: https://dex.meyeringh.org
        clientId: argocd
        clientSecret: $oidc.dex.clientSecret
        requestedScopes: ["openid", "profile", "email", "groups"]
        requestedIDTokenClaims: {"groups": {"essential": true}}
    rbac:
      policy.default: role:readonly
      policy.csv: |
        # Default readonly users should be able to view ApplicationSets
        p, role:readonly, applicationsets, get, */*, allow
        # Editor group permissions - can do everything except delete
        p, editor, clusters, get, *, allow
        p, editor, clusters, create, *, allow
        p, editor, clusters, update, *, allow
        p, editor, repositories, get, *, allow
        p, editor, repositories, create, *, allow
        p, editor, repositories, update, *, allow
        p, editor, certificates, get, *, allow
        p, editor, certificates, create, *, allow
        p, editor, accounts, get, *, allow
        p, editor, gpgkeys, get, *, allow
        p, editor, gpgkeys, create, *, allow
        p, editor, projects, get, *, allow
        p, editor, projects, create, *, allow
        p, editor, projects, update, *, allow
        p, editor, applications, get, *, allow
        p, editor, applications, create, *, allow
        p, editor, applications, update, *, allow
        p, editor, applications, sync, *, allow
        p, editor, applications, action/*, *, allow
        p, editor, applications, override, *, allow
        p, editor, applicationsets, get, */*, allow
        p, editor, applicationsets, create, */*, allow
        p, editor, applicationsets, update, */*, allow
        p, editor, logs, get, *, allow
        p, editor, exec, create, *, allow
        # Grant editor group to users in the editor group
        g, editor, editor
      scopes: "[groups]"
  dex:
    enabled: false
argocd-apps:
  applicationsets:
    root:
      namespace: argocd
      generators:
        - git:
            repoURL: &repoURL http://gitea-http.gitea:3000/ops/homelab
            revision: &revision master
            directories:
              - path: system/*
              - path: platform/*
              - path: apps/*
      template:
        metadata:
          name: '{{path.basename}}'
        spec:
          destination:
            name: in-cluster
            namespace: '{{path.basename}}'
          project: default  # TODO
          source:
            repoURL: *repoURL
            path: '{{path}}'
            targetRevision: *revision
          syncPolicy:
            automated:
              prune: true
              selfHeal: true
            retry:
              limit: 10
              backoff:
                duration: 1m
                factor: 2
                maxDuration: 16m
            syncOptions:
              - CreateNamespace=true
              - ApplyOutOfSyncOnly=true
              - ServerSideApply=true
            managedNamespaceMetadata:
              annotations:
                # Enable privileged VolSync movers by default for all namespaces
                # TODO this may be refactored in the future for finer granularity
                # See also https://volsync.readthedocs.io/en/stable/usage/permissionmodel.html
                volsync.backube/privileged-movers: "true"
          ignoreDifferences:
          # This is needed to prevent ArgoCD from constantly trying to update the empty labels due to a bug (diff between null labels and empty labels)
          - group: rbac.authorization.k8s.io
            kind: Role
            jsonPointers:
            - /metadata/labels
          - group: rbac.authorization.k8s.io
            kind: RoleBinding
            jsonPointers:
            - /metadata/labels
          - group: rbac.authorization.k8s.io
            kind: ClusterRole
            jsonPointers:
            - /metadata/labels
          - group: rbac.authorization.k8s.io
            kind: ClusterRoleBinding
            jsonPointers:
            - /metadata/labels
      # This is here so we can temporarily pause syncing
      ignoreApplicationDifferences:
        - jsonPointers:
            - /spec/syncPolicy